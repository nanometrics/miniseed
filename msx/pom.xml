<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ca.nanometrics</groupId>
    <artifactId>miniseed-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>msx</artifactId>
  <description>miniseed executable tool</description>

  <properties>
    <native.platformargs>--static</native.platformargs>
    <picocli-docs>${project.build.directory}/deploy/docs</picocli-docs>
    <product.name>msx</product.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>ca.nanometrics</groupId>
      <artifactId>miniseed</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli-codegen</artifactId>
    </dependency>
    <dependency>
      <groupId>me.tongfei</groupId>
      <artifactId>progressbar</artifactId>
    </dependency>
    <dependency>
      <groupId>org.asciidoctor</groupId>
      <artifactId>asciidoctorj</artifactId>
    </dependency>
    <dependency>
      <groupId>org.asciidoctor</groupId>
      <artifactId>asciidoctorj-pdf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.parent.groupId}</groupId>
      <artifactId>miniseed</artifactId>
      <version>${project.parent.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>${project.build.directory}/generated-picocli-docs</sourceDirectory>
        </configuration>
        <executions>
          <execution>
            <id>docs-html</id>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <attributes>
                <source-highlighter>coderay</source-highlighter>
              </attributes>
              <backend>html5</backend>
              <outputDirectory>${picocli-docs}/html</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>docs-pdf</id>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <attributes>
                <source-highlighter>coderay</source-highlighter>
                <icons>font</icons>
                <pagenums />
                <toc />
                <idprefix />
                <idseparator>-</idseparator>
              </attributes>
              <backend>pdf</backend>
              <outputDirectory>${picocli-docs}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>annotations-add-source</id>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli-codegen</artifactId>
            <version>${picocli.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>picocli-reflect-config</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>process-classes</phase>
            <configuration>
              <mainClass>picocli.codegen.aot.graalvm.ReflectionConfigGenerator</mainClass>
              <arguments>
                <argument>ca.nanometrics.miniseed.msx.Msx</argument>
                <argument>--output=${project.build.directory}/picocli-reflect.json</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>generate-man-pages</id>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>process-classes</phase>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <mainClass>picocli.codegen.docgen.manpage.ManPageGenerator</mainClass>
              <arguments>
                <argument>--outdir=${project.build.directory}/generated-picocli-docs</argument>
                <argument>ca.nanometrics.miniseed.msx.Msx</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <buildArgs>
            <commandlineArgs>--initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder
              -H:IncludeResources=logging.properties
              -H:IncludeResources=META-INF/MANIFEST.MF
              -H:ReflectionConfigurationFiles=${project.build.directory}/picocli-reflect.json
              -H:+ReportUnsupportedElementsAtRuntime
              -H:+AddAllCharsets ${native.platformargs}</commandlineArgs>
          </buildArgs>
          <imageName>${product.name}</imageName>
          <mainClass>ca.nanometrics.miniseed.msx.Msx</mainClass>
          <outputDirectory>${project.build.directory}/deploy/${platform.name}</outputDirectory>
        </configuration>
        <executions>
          <execution>
            <id>build-native</id>
            <goals>
              <goal>compile-no-fork</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <native.platformargs />
        <platform.name>mac</platform.name>
      </properties>
    </profile>
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <platform.name>windows</platform.name>
      </properties>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <properties>
        <platform.name>linux</platform.name>
      </properties>
    </profile>
  </profiles>
</project>
